@inproceedings{Pra72,
  title={Shellsort and Sorting Networks},
  author={Vaughan R. Pratt},
  booktitle={Outstanding Dissertations in the Computer Sciences},
  year={1972},
  url={https://api.semanticscholar.org/CorpusID:11928873}
}

@article{PS65,
  title={A method of information sorting in computer memories},
  author={Papernov, AA and Stasevich, GV},
  journal={Problemy Peredachi Informatsii},
  volume={1},
  number={3},
  pages={81--98},
  year={1965},
  publisher={Russian Academy of Sciences, Branch of Informatics, Computer Equipment and~…}
}

@article{She59,
  author = {Shell, D. L.},
  title = {A High-Speed Sorting Procedure},
  year = {1959},
  issue_date = {July 1959},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {2},
  number = {7},
  issn = {0001-0782},
  url = {https://doi.org/10.1145/368370.368387},
  doi = {10.1145/368370.368387},
  journal = {Commun. ACM},
  month = {jul},
  pages = {30–32},
  numpages = {3}
}

@Inbook{GD18a,
  author="G{\"u}ting, Ralf Hartmut
and Dieker, Stefan",
  title="Einf{\"u}hrung",
  bookTitle="Datenstrukturen und Algorithmen",
  year="2018",
  publisher="Springer Fachmedien Wiesbaden",
  address="Wiesbaden",
  pages="1--38",
  abstract="Algorithmen und Datenstrukturen sind Thema dieses Buches. Algorithmen arbeiten auf Datenstrukturen und Datenstrukturen enthalten Algorithmen als Komponenten; insofern sind beide untrennbar miteinander verkn{\"u}pft. In der Einleitung wollen wir diese Begriffe etwas beleuchten und sie einordnen in eine ``Umgebung'' eng damit zusammenh{\"a}ngender Konzepte wie Funktion, Prozedur, Abstrakter Datentyp, Datentyp, Algebra, Typ (in einer Programmiersprache), Klasse und Modul.",
  isbn="978-3-658-04676-7",
  doi="10.1007/978-3-658-04676-7_1",
  url="https://doi.org/10.1007/978-3-658-04676-7_1"
}



@Inbook{GD18e,
  author="G{\"u}ting, Ralf Hartmut and Dieker, Stefan",
  title="Sortieralgorithmen",
  bookTitle="Datenstrukturen und Algorithmen",
  year="2018",
  publisher="Springer Fachmedien Wiesbaden",
  address="Wiesbaden",
  pages="169--200",
  abstract="Das Sortieren einer Menge von Werten {\"u}ber einem geordneten Wertebereich (z. B. int, real, string), das hei{\ss}t, die Berechnung einer geordneten Folge aus einer ungeordneten Folge dieser Werte, ist ein zentrales und intensiv studiertes algorithmisches Problem. Sortieralgorithmen haben viele direkte Anwendungen in der Praxis, finden aber auch h{\"a}ufig Einsatz als Teilschritte in Algorithmen, die ganz andere Probleme l{\"o}sen. Zum Beispiel f{\"u}r die Plane-Sweep- und Divide-and-Conquer-Algorithmen in Kapitel 8 ist Sortieren eine wesentliche Voraussetzung.",
  isbn="978-3-658-04676-7",
  doi="10.1007/978-3-658-04676-7_5",
  url="https://doi.org/10.1007/978-3-658-04676-7_5"
}


@Inbook{OW17a,
  author="Ottmann, Thomas
and Widmayer, Peter",
  title="Grundlagen",
  bookTitle="Algorithmen und Datenstrukturen",
  year="2017",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="1--78",
  abstract="In der Informatik unterscheidet man {\"u}blicherweise zwischen Verfahren zur L{\"o}sung von Problemen und ihrer Implementation in einer bestimmten Programmiersprache auf bestimmten Rechnern. Man nennt die Verfahren Algorithmen. Sie sind das zentrale Thema der Informatik.",
  isbn="978-3-662-55650-4",
  doi="10.1007/978-3-662-55650-4_1",
  url="https://doi.org/10.1007/978-3-662-55650-4_1"
}

@Inbook{OW17b,
  author="Ottmann, Thomas
and Widmayer, Peter",
  title="Sortieren",
  bookTitle="Algorithmen und Datenstrukturen",
  year="2017",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="79--165",
  abstract="Untersuchungen von Computerherstellern und -nutzern zeigen seit vielen Jahren, dass mehr als ein Viertel der kommerziell verbrauchten Rechenzeit auf Sortiervorg{\"a}nge entf{\"a}llt. Es ist daher nicht erstaunlich, dass gro{\ss}e Anstrengungen unternommen wurden m{\"o}glichst effiziente Verfahren zum Sortieren von Daten mithilfe von Computern zu entwickeln. Das gesammelte Wissen {\"u}ber Sortierverfahren f{\"u}llt inzwischen B{\"a}nde.",
  isbn="978-3-662-55650-4",
  doi="10.1007/978-3-662-55650-4_2",
  url="https://doi.org/10.1007/978-3-662-55650-4_2"
}




@Inbook{OW17e,
  author="Ottmann, Thomas
and Widmayer, Peter",
  title="B{\"a}ume",
  bookTitle="Algorithmen und Datenstrukturen",
  year="2017",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="259--402",
  abstract="B{\"a}ume geh{\"o}ren zu den wichtigsten in der Informatik auftretenden Datenstrukturen. Entscheidungsb{\"a}ume, Syntaxb{\"a}ume, Ableitungsb{\"a}ume, Kodeb{\"a}ume, spannende B{\"a}ume, baumartig strukturierte Suchr{\"a}ume, Suchb{\"a}ume und viele andere belegen die Allgegenwart von B{\"a}umen. Wir haben in den vorangehenden Kapiteln bereits mehrfach B{\"a}ume als intuitives Konzept benutzt, so z. B. zur Erl{\"a}uterung des Sortierverfahrens Heapsort in Abschnitt 2.3, beim Nachweis unterer Schranken f{\"u}r das Sortierproblem in Abschnitt 2.8 und beim Bin{\"a}rbaum-Sondieren in Abschnitt 4.3.4.",
  isbn="978-3-662-55650-4",
  doi="10.1007/978-3-662-55650-4_5",
  url="https://doi.org/10.1007/978-3-662-55650-4_5"
}

@Inbook{OW17d,
  author="Ottmann, Thomas and Widmayer, Peter",
  title="Hashverfahren",
  bookTitle="Algorithmen und Datenstrukturen",
  year="2017",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="191--258",
  abstract="In den Kapiteln 1 und 3 haben wir einige Methoden kennen gelernt, die es erlauben eine Menge von Datens{\"a}tzen so zu speichern, dass die Operationen Suchen, Einf{\"u}gen und Entfernen unterst{\"u}tzt werden. Jeder Datensatz ist dabei gekennzeichnet durch einen eindeutigen Schl{\"u}ssel. Zu jedem Zeitpunkt ist lediglich eine (kleine) Teilmenge K aller m{\"o}glichen Schl{\"u}ssel {\$}{\$} {\{}{\backslash}mathcal{\{}K{\}}{\}} {\$}{\$}(englisch: keys) gespeichert.",
  isbn="978-3-662-55650-4",
  doi="10.1007/978-3-662-55650-4_4",
  url="https://doi.org/10.1007/978-3-662-55650-4_4"
}



@book{Knu97,
  author = {Knuth, Donald E.},
  title = {The Art of Computer Programming, Volume 1 (3rd Ed.): Fundamental Algorithms},
  year = {1997},
  isbn = {0201896834},
  publisher = {Addison Wesley Longman Publishing Co., Inc.},
  address = {USA}
}

@article{CBM89,
  title = {Efficient reconstruction of binary trees from their traversals},
  journal = {Applied Mathematics Letters},
  volume = {2},
  number = {1},
  pages = {79-82},
  year = {1989},
  issn = {0893-9659},
  doi = {https://doi.org/10.1016/0893-9659(89)90122-5},
  url = {https://www.sciencedirect.com/science/article/pii/0893965989901225},
  author = {R.D. Cameron and B.K. Bhattacharya and E.A.T. Merks},
  abstract = {Given the n nodes of a binary tree in both inorder and preorder sequence, the tree can be uniquely identified. An efficient algorithm for reconstructing such trees from their sequences is presented, using O (n) time and O (h) intermediate storage, where h is the height of the tree being reconstructed.}
}

@book{Hof22,
  place={München},
  isbn = {978-3446470293},
  title={Theoretische Informatik},
  publisher={Carl Hanser Verlag},
  author={Hoffmann, Dirk W.},
  year={2022}}